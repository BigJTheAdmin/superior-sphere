---
import Search from "@/components/Search.astro";
import ThemeToggle from "@/components/ThemeToggle.astro";
import { menuLinks } from "@/site.config";

/** Base-aware helpers (safe for GitHub Project Pages) */
const BASE = import.meta.env.BASE_URL; // e.g. "/superior-sphere/"
const link = (p: string = "") => `${BASE}${p.replace(/^\/+/, "")}`;

/** Treat internal links ("/foo" or "foo") with BASE; pass through external links */
const normalize = (href: string = "") => {
  if (!href) return link("");
  if (/^(https?:|mailto:|tel:)/i.test(href)) return href;
  // allow inputs like "/services" or "services"
  return link(href);
};

/** Mark active links accounting for the repo base */
const rawPath = Astro.url.pathname;              // e.g. "/superior-sphere/services"
const pathSansBase = rawPath.startsWith(BASE) ? rawPath.slice(BASE.length - 1) : rawPath; // keep leading "/"
const ensureLeadingSlash = (p: string) => (p.startsWith("/") ? p : `/${p}`);
const isActive = (p: string) => pathSansBase === ensureLeadingSlash(p.replace(/^\/+/, ""));

// Pre-normalize your nav items from site.config
const nav = (menuLinks ?? []).map((i: any) => ({
  ...i,
  href: normalize(i.path ?? i.href ?? ""),
  active: isActive(i.path ?? i.href ?? ""),
}));
---

<header class="group relative mb-8 flex items-center sm:ps-18" id="main-header">
  <div class="sm:flex-column flex flex-col items-center sm:items-center">
    <a
      aria-current={isActive("/") ? "page" : false}
      class="inline-flex items-center sm:relative sm:inline-block"
      href={normalize("/")}
    >
      <img
        src={normalize("/PTSwTerminalHORIZONTAL.png")}
        alt="PingTraceSSH Logo"
        class="me-3 h-24 w-auto sm:h-45"
        loading="eager"
        width="320"
        height="96"
      />
    </a>

    <nav
      aria-label="Main menu"
      id="navigation-menu"
      class="bg-global-bg/85 text-accent sm:divide-accent absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md py-4 shadow backdrop-blur-sm group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-4 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
    >
      {
        nav.map((item) => (
          <a
            aria-current={item.active ? "page" : false}
            class="px-4 py-4 underline-offset-2 hover:underline sm:py-0"
            data-astro-prefetch
            href={item.href}
          >
            {item.title ?? item.label}
          </a>
        ))
      }
    </nav>
  </div>

  <Search />
  <ThemeToggle />

  <mobile-button>
    <button
      aria-expanded="false"
      aria-haspopup="menu"
      id="toggle-navigation-menu"
      type="button"
      class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
    >
      <span class="sr-only">Open main menu</span>
      <svg
        aria-hidden="true"
        id="line-svg"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
        fill="none"
        focusable="false"
        stroke="currentColor"
        stroke-width="1.5"
      >
        <path d="M3.75 9h16.5m-16.5 6.75h16.5" stroke-linecap="round" stroke-linejoin="round"></path>
      </svg>
      <svg
        aria-hidden="true"
        id="cross-svg"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        class="text-accent absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
        fill="none"
        focusable="false"
        stroke="currentColor"
        stroke-width="1.5"
      >
        <path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"></path>
      </svg>
    </button>
  </mobile-button>
</header>

<script is:inline>
  import { toggleClass } from "@/utils/domElement";

  class MobileNavBtn extends HTMLElement {
    #menuOpen = false;

    connectedCallback() {
      const headerEl = document.getElementById("main-header");
      const mobileButtonEl = this.querySelector("button");

      mobileButtonEl?.addEventListener("click", () => {
        if (headerEl) toggleClass(headerEl, "menu-open");
        this.#menuOpen = !this.#menuOpen;
        mobileButtonEl.setAttribute("aria-expanded", String(this.#menuOpen));
      });
    }
  }

  customElements.define("mobile-button", MobileNavBtn);
</script>
